.include "8clocks.jsim"
.include "nominal.jsim"
.include "stdcell.jsim"

*******************************************************************************
* Plug-in your full adder and 32-bit ripple-carry adder subcircuits here.
*******************************************************************************
.subckt fa a b carry_in sum_out carry_out
    Xfirst a b sum1 nand2
    Xsecond a sum1 sum2 nand2
    Xthird b sum1 sum3 nand2
    Xha_out sum2 sum3 ha_out nand2

    Xfourth ha_out carry_in sum4 nand2
    Xfifth ha_out sum4 sum5 nand2
    Xsixth carry_in sum4 sum6 nand2
    Xsum_out sum5 sum6 sum_out nand2
    Xcarry_out sum4 sum1 carry_out nand2
.ends

.subckt add32 a[31:0] b[31:0] carry_in0 sum[31:0] carry_out[31:30]
    Xfa a[31:0] b[31:0] carry_out[30:0] carry_in0 sum[31:0] carry_out[31:0] fa
.ends


*******************************************************************************
* Subtractor
*******************************************************************************

.subckt as32 a[31:0] b[31:0] op0 fas[31:0] n v z
    .connect op0 op0[31:0]
    xzero zero constant0
    xone one constant1
    xinverter b[31:0] ib[31:0] inverter
    xop0 op0[31:0] b[31:0] ib[31:0] z[31:0] mux2
    xadd32 a[31:0] z[31:0] op0 fas[31:0] v1 v2 add32
    .connect fas31 n
    xv v1 v2 v xor2
    xzone fas[31:24] fas[23:16] fas[15:8] fas[7:0] zone[7:0] nor4
    xztwo zone[7:6] zone[5:4] zone[3:2] zone[1:0] ztwo[1:0] nand4
    xz ztwo1 ztwo0 z nor2
.ends

*******************************************************************************
* comparator
*******************************************************************************

.subckt cmp32 n v z op[2:1] fcmp[31:0]
  xzero zero constant0
  .connect zero fcmp[31:1]
  xop2 op2 zero nv outputone mux2
  xor n v nv xor2
  xop1 op1 zero z outputtwo mux2
  xoutput outputone outputtwo fcmp0 or2
.ends

Xas32 a[31:0] b[31:0] op0 fas[31:0] n v z as32
Xcmp32 n v z op[2:1] fcmp[31:0] cmp32

Wa a[31:0] nrz(0, 5, 20ns, 0ns, 0.001ns, 0.001ns)
+ 5 4 8 100 129 20 2000 201 156
Wb b[31:0] nrz(0, 5, 20ns, 0ns, 0.001ns, 0.001ns)
+ 5 2 8 120 412 17 1888 301 218

Wop0 op0 nrz(0, 5, 20ns, 0ns, 0.001ns, 0.001ns)
+ 0 1
* + - = < <=
Wop1 op1 nrz(0, 5, 20ns, 0ns, 0.001ns, 0.001ns)
+ 0 0 1 0 1
Wop2 op2 nrz(0, 5, 20ns, 0ns, 0.001ns, 0.001ns)
+ 0 0 0 1 1


.tran 300ns
.plot sd(a[31:0])
.plot sd(b[31:0])
.plot sd(fas[31:0])
.plot sd(fcmp[31:0])
.plot n
.plot v
.plot z
.plot op0
.plot op1
.plot op2
