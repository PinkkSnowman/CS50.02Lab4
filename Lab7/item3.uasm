.include beta.uasm          | include the standard predefined macros

        LD(r31, DATA, r0)   | r0 = memory pointed to by DATA (the array length)

LOOP:   ADDC(r1, 4, r1)     | r1 += 4 (that is, advance to the next int)
        LD(r1, DATA, r2)    | r2 = memory pointed to by (r1 + DATA)
        XORC(r2, 42, r2)    | XOR with key
        ST(r2, DATA, r1)    | memory pointed to by (DATA + r1) = r2
        SUBC(r0, 1, r0)     | r0--
        BNE(r0, LOOP)       | if r0 != 0, go back to LOOP
        HALT()              | finish execution

|||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||

| DATA marks the beginning of user data in memory.
DATA:   LONG(5)             | length of the array
        LONG(3)
        LONG(-5)
        LONG(12)
        LONG(-14)
        LONG(1)