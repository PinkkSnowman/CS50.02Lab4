.include beta.uasm

        LD(r31, DATA, r0)   | r0 = length of array

LOOP:   BEQ(r0, END)        | checks if r0 = 0, ends if yes
        ADDC(r1, 4, r1)     | adds 4 to r1 (main memory address)
        SUBC(r0, 1, r0)     | decrements r0 indicating next step
        LD(r1, DATA, r2)    | r2 = next int1
        ANDC(r2, 1, r4)     | performs bitwise boolean AND on the two inputs; r4 = 1 if odd, 0 if even
        BNE(r4, LOOP)       | loops back if r4 is not equal to 0
        ADD(r3, r2, r3)     | adds r2 to r3, r3 = current sum of even numbers
        BNE(r0, LOOP) 

END: 	ADDC(r1, 4, r1)
        ST(r3, DATA, r1)    | the sum of the array's even numbers
        HALT()       


| DATA marks the beginning of user data in memory.
DATA:   LONG(5)             | length of the array
        LONG(4)
        LONG(2)
        LONG(0)
        LONG(6)
        LONG(-9)